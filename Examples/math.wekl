//-----
//Addition
//-----
"3" //Pushes 1 to the stack
outs //Prints the value on top of the stack ('3')
" + " //Pushes ' + ' to the stack
outs //Prints the value on top of the stack (' + ')
pop //Removes the value at the top of the stack (' + ')
"1" //Pushes 3 to the stack
outs //Prints the value on top of the stack ('1')
" = " //Pushes ' = ' to the stack
outs //Prints the value on top of the stack (' = ')
pop //Removes the value at the top of the stack (' = ')
add //Pushes the value of the first value at the top of the stack + the second value at the top of the stack (3 + 1)
outs //Prints the value on top of the stack (answer to 3 + 1)
pop //Removes the value at the top of the stack (3 + 1)
pop //Removes the value at the top of the stack ('1')
pop //Removes the value at the top of the stack ('3')

"\n" //Pushes newline to the stack
outs //Prints the value on top of the stack (newline)
pop //Removes the value at the top of the stack (newline)

//-----
//Subtraction
//-----
"3" //Pushes 3 to the stack
outs //Prints the value on top of the stack ('3')
" - " //Pushes ' - ' to the stack
outs //Prints the value on top of the stack (' - ')
pop //Removes the value at the top of the stack (' - ')
"1" //Pushes 1 to the stack
outs //Prints the value on top of the stack ('1')
" = " //Pushes ' = ' to the stack
outs //Prints the value on top of the stack (' = ')
pop //Removes the value at the top of the stack (' = ')
sub //Pushes the value of the first value at the top of the stack - the second value at the top of the stack (3 - 1)
outs //Prints the value on top of the stack (answer to 3 - 1)
pop //Removes the value at the top of the stack (3 - 1)
pop //Removes the value at the top of the stack ('1')
pop //Removes the value at the top of the stack ('3')

"\n" //Pushes newline to the stack
outs //Prints the value on top of the stack (newline)
pop //Removes the value at the top of the stack (newline)

//-----
//Multiplication
//-----
"4" //Pushes 4 to the stack
outs //Prints the value on top of the stack ('4')
" * " //Pushes ' * ' to the stack
outs //Prints the value on top of the stack (' * ')
pop //Removes the value at the top of the stack (' * ')
"2" //Pushes 2 to the stack
outs //Prints the value on top of the stack ('2')
" = " //Pushes ' = ' to the stack
outs //Prints the value on top of the stack (' = ')
pop //Removes the value at the top of the stack (' = ')
mul //Pushes the value of the first value at the top of the stack * the second value at the top of the stack (4 * 2)
outs //Prints the value on top of the stack (answer to 4 * 2)
pop //Removes the value at the top of the stack (4 * 2)
pop //Removes the value at the top of the stack ('2')
pop //Removes the value at the top of the stack ('4')

"\n" //Pushes newline to the stack
outs //Prints the value on top of the stack (newline)
pop //Removes the value at the top of the stack (newline)

//-----
//Division
//-----
"4" //Pushes 4 to the stack
outs //Prints the value on top of the stack ('4')
" / " //Pushes ' - ' to the stack
outs //Prints the value on top of the stack (' / ')
pop //Removes the value at the top of the stack (' / ')
"2" //Pushes 2 to the stack
outs //Prints the value on top of the stack ('2')
" = " //Pushes ' = ' to the stack
outs //Prints the value on top of the stack (' = ')
pop //Removes the value at the top of the stack (' = ')
div //Pushes the value of the first value at the top of the stack - the second value at the top of the stack (4 / 2)
outs //Prints the value on top of the stack (answer to 4 / 2)
pop //Removes the value at the top of the stack (4 / 2)
pop //Removes the value at the top of the stack ('2')
pop //Removes the value at the top of the stack ('4')